[{"/Users/alexgeldash/Projects/justest/src/index.js":"1","/Users/alexgeldash/Projects/justest/src/App.js":"2","/Users/alexgeldash/Projects/justest/src/components/pages/ProfilePage/ProfilePage.jsx":"3","/Users/alexgeldash/Projects/justest/src/components/pages/SignUpPage/SignUpPage.jsx":"4","/Users/alexgeldash/Projects/justest/src/components/pages/ItemQuestion/ItemQuestion.jsx":"5","/Users/alexgeldash/Projects/justest/src/components/pages/ArchivePage/ArchivePage.jsx":"6","/Users/alexgeldash/Projects/justest/src/components/pages/SignInPage/SignInPage.jsx":"7","/Users/alexgeldash/Projects/justest/src/components/pages/CreateTestPage/CreateTest.jsx":"8","/Users/alexgeldash/Projects/justest/src/components/pages/TestResultPage/TestResult.jsx":"9","/Users/alexgeldash/Projects/justest/src/components/pages/TestReadyPage/TestReady.jsx":"10","/Users/alexgeldash/Projects/justest/src/components/pages/TestPage/TestPage.jsx":"11","/Users/alexgeldash/Projects/justest/src/components/Header/Header.jsx":"12","/Users/alexgeldash/Projects/justest/src/components/pages/StatisticPage/StatisticPage.jsx":"13","/Users/alexgeldash/Projects/justest/src/components/pages/MainPage/MainPage.jsx":"14","/Users/alexgeldash/Projects/justest/src/components/ArchiveTable/ArchiveTable.jsx":"15","/Users/alexgeldash/Projects/justest/src/components/StatisticTable/StatisticTable.jsx":"16","/Users/alexgeldash/Projects/justest/src/components/Footer/Footer.jsx":"17"},{"size":398,"mtime":1683043550961,"results":"18","hashOfConfig":"19"},{"size":1791,"mtime":1683203960421,"results":"20","hashOfConfig":"19"},{"size":4056,"mtime":1683159712077,"results":"21","hashOfConfig":"19"},{"size":2623,"mtime":1681901624939,"results":"22","hashOfConfig":"19"},{"size":166,"mtime":1681901624937,"results":"23","hashOfConfig":"19"},{"size":596,"mtime":1682980948741,"results":"24","hashOfConfig":"19"},{"size":1966,"mtime":1683205250191,"results":"25","hashOfConfig":"19"},{"size":9737,"mtime":1684786267866,"results":"26","hashOfConfig":"19"},{"size":3962,"mtime":1683203679751,"results":"27","hashOfConfig":"19"},{"size":5396,"mtime":1683206536205,"results":"28","hashOfConfig":"19"},{"size":2204,"mtime":1682605425754,"results":"29","hashOfConfig":"19"},{"size":1166,"mtime":1683049172102,"results":"30","hashOfConfig":"19"},{"size":624,"mtime":1682980943733,"results":"31","hashOfConfig":"19"},{"size":4821,"mtime":1683153687541,"results":"32","hashOfConfig":"19"},{"size":4632,"mtime":1683193775635,"results":"33","hashOfConfig":"19"},{"size":4521,"mtime":1684955065076,"results":"34","hashOfConfig":"19"},{"size":749,"mtime":1681901624934,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"3uibsl",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/alexgeldash/Projects/justest/src/index.js",["92"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.sass';\nimport App from './App';\nimport {Link, BrowserRouter} from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n",[],"/Users/alexgeldash/Projects/justest/src/App.js",[],[],"/Users/alexgeldash/Projects/justest/src/components/pages/ProfilePage/ProfilePage.jsx",["93"],[],"/Users/alexgeldash/Projects/justest/src/components/pages/SignUpPage/SignUpPage.jsx",["94","95","96","97","98","99","100"],[],"import {Link} from \"react-router-dom\"\r\nimport React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport validator from 'validator';\r\n\r\nfunction validateEmail(email) {\r\n    var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nconst registrProcess = () => {\r\n    const nameData = document.getElementById(\"name\").value;\r\n    const surnameData = document.getElementById(\"surname\").value;\r\n    const emailData = document.getElementById(\"email\").value;\r\n    const passData = document.getElementById(\"password\").value;\r\n    const passData2 = document.getElementById(\"password2\").value;\r\n    if(!!!emailData || !!!passData || !!!passData2){\r\n        alert(\"Вы не ввели данные\")\r\n    }else if (!validateEmail(emailData)){\r\n        alert(\"Неправильно введен email\")\r\n    }\r\n    else{\r\n        if(passData!=passData2){\r\n            alert(\"Пароли не совпадают\")\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport const SignUpPage = () => {\r\n    return (\r\n      <div className='Content'>\r\n        <div className='SignUp'>\r\n            <h1 className='HeaderSignUp'>Регистрация</h1>\r\n            <div className=\"SignUpMain\">\r\n            <div className='TextSignUp'>\r\n                <div className=\"SignUpForm\">\r\n                    <form>\r\n                        <p>Имя</p>\r\n                        <input type=\"text\" id=\"name\" placeholder=''/>\r\n                        <p>Фамилия</p>\r\n                        <input type=\"text\" id=\"surname\" placeholder=''/>\r\n                        <p>Email</p>\r\n                        <input type=\"email\" id=\"email\" placeholder=''/>\r\n                        <p>Пароль</p>\r\n                        <input type=\"password\" id=\"password\" placeholder=''/>\r\n                        <p>Подтверждение пароля</p>\r\n                        <input type=\"text\" id=\"password2\" placeholder=''/>\r\n                    </form>\r\n                    <button onClick={() => registrProcess()}>Sign Up</button>\r\n                </div>\r\n                <div className=\"SignUpLinks\">\r\n                <Link to = '/signinto' style = {{\"textDecoration\" : \"none\", \"color\": \"#000 !important\"}}>\r\n                    <p>Already registrated?</p>\r\n                </Link>\r\n                </div>\r\n            </div>\r\n            <div className='ImgSignUp'>\r\n                <img src={\"./img/people2.jpg\"} />\r\n            </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }","/Users/alexgeldash/Projects/justest/src/components/pages/ItemQuestion/ItemQuestion.jsx",[],[],"/Users/alexgeldash/Projects/justest/src/components/pages/ArchivePage/ArchivePage.jsx",[],[],"/Users/alexgeldash/Projects/justest/src/components/pages/SignInPage/SignInPage.jsx",["101","102"],[],"/Users/alexgeldash/Projects/justest/src/components/pages/CreateTestPage/CreateTest.jsx",["103","104","105","106","107","108","109","110","111","112","113","114"],[],"/Users/alexgeldash/Projects/justest/src/components/pages/TestResultPage/TestResult.jsx",["115","116","117","118","119"],[],"/Users/alexgeldash/Projects/justest/src/components/pages/TestReadyPage/TestReady.jsx",["120","121","122","123","124","125","126","127"],[],"/Users/alexgeldash/Projects/justest/src/components/pages/TestPage/TestPage.jsx",[],[],"/Users/alexgeldash/Projects/justest/src/components/Header/Header.jsx",["128","129"],[],"import React from 'react'\nimport Avatar from 'react-avatar';\n\nimport {Link} from \"react-router-dom\"\n\nexport default function Header(props) {\n  let Authentic= [];\n  if(props.isLogged==1){\n    Authentic.push(<div className = 'rightcontainer'><Link to = '/profile'>\n    <div>\n    <Avatar name=\"Account\" size=\"42\"  textSizeRatio={2} color=\"black\"/>\n    </div>\n    </Link></div>);\n  }else{\n    Authentic.push(<div className = 'rightcontainer'><Link to = '/signinto' style={{textDecoration: 'none'}}>\n    <div className = 'signin'>\n      sign in\n      <img className = 'signimg' src={\"./img/login_but.png\"}/>\n    </div>\n    </Link></div>);\n  }\n  return (\n    <header className = 'mainheader' position=\"static\">\n        <div className = 'leftcontainer'>\n            <Link to = '/' className = 'logo'>JUSTEST</Link>\n            <Link to = '/test' className = 'element'>create test</Link>\n            <Link to = '/archive' className = 'element'>test archieve</Link>\n            <Link to = '/statistic' className = 'element'>statistic</Link>\n            <Link to = '/signinto' className = 'element'>login</Link> \n        </div>\n        {Authentic}        \n    </header>\n  )\n}\n","/Users/alexgeldash/Projects/justest/src/components/pages/StatisticPage/StatisticPage.jsx",[],[],"/Users/alexgeldash/Projects/justest/src/components/pages/MainPage/MainPage.jsx",["130","131","132"],[],"/Users/alexgeldash/Projects/justest/src/components/ArchiveTable/ArchiveTable.jsx",["133","134","135","136","137","138"],[],"import React from 'react'\nimport {Link} from \"react-router-dom\"\nimport { useState, useMemo } from 'react';\nimport { Pagination, tooltipClasses } from '@mui/material';\nimport { ArchivePage } from '../pages/ArchivePage/ArchivePage';\nimport {createRoot} from 'react-dom/client';\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n\n\n  const requestSort = (key) => {\n\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\n\nexport default function ArchiveTable (props){\n  const [currentPage,setPage] = useState(1);\n  const dataItem = [\n    { id: 1, test: 'Тест на выгорание', option: 'Выгорание', num: 236, proc: 15, date: '2023.12.20'},\n    { id: 2, test: 'Тест на агрессию', option: 'Агрессия', num: 2, proc: 78, date: '2023.03.14' },\n    { id: 3, test: 'Тест для новичков', option: 'Позитив', num: 190, proc: 90, date: '2023.10.30' },\n    { id: 4, test: 'Работа в команде', option: 'Командность', num: 6, proc: 13, date: '2023.09.12'},\n  ];\n  \n  const { items, requestSort, sortConfig } = useSortableData(dataItem);\n\n  const [itemsSliced, setItemsSliced]= useState(items.slice(0, props.rowCount));\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  let listTable = useMemo(() => (<table>\n    <thead>\n      <tr>\n      <th>\n          <button\n            type=\"button\"\n            onClick={() => requestSort('id')}\n            className={getClassNamesFor('id')}\n          >\n            Номер\n          </button>\n        </th>\n        <th>\n          <button\n            type=\"button\"\n            onClick={() => requestSort('test')}\n            className={getClassNamesFor('test')}\n          >\n            Название теста\n          </button>\n        </th>\n        <th>\n          <button\n            type=\"button\"\n            onClick={() => requestSort('option')}\n            className={getClassNamesFor('option')}\n          >\n            Качество\n          </button>\n        </th>\n        <th>\n          <button\n            type=\"button\"\n            onClick={() => requestSort('num')}\n            className={getClassNamesFor('num')}\n          >\n            Количество прохождений\n          </button>\n        </th>\n        <th>\n          <button\n            type=\"button\"\n            onClick={() => requestSort('proc')}\n            className={getClassNamesFor('proc')}\n          >\n            Средний результат\n          </button>\n        </th>\n        <th>\n          <button\n            type=\"button\"\n            onClick={() => requestSort('data')}\n            className={getClassNamesFor('data')}\n          >\n            Дата\n          </button>\n        </th>\n        <th>\n          <button\n            type=\"button\"\n          >______</button>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.slice((currentPage-1)*props.rowCount, currentPage*props.rowCount).map((item) => (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.test}</td>\n          <td>{item.option}</td>\n          <td>{item.num}</td>\n          <td>{item.proc}%</td>\n          <td>{item.date}</td>\n          <td><Link to={`/result?${item.id}`}>\n                <button className='resultBut'>results</button>\n              </Link>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>), [requestSort, items, currentPage]);\n\n\n  const handlePageChange = (event,page) =>{\n    setPage(page);\n    //setItemsSliced(items.slice((page-1)*props.rowCount, page*props.rowCount));\n  }\n\n  return (\n    <div>\n      <div id=\"archieve\">{listTable}</div>\n      <Pagination count={Math.ceil(items.length / props.rowCount)} onChange={handlePageChange}></Pagination>\n    </div>\n  );\n};\n","/Users/alexgeldash/Projects/justest/src/components/StatisticTable/StatisticTable.jsx",["139","140","141","142","143","144","145"],[],"/Users/alexgeldash/Projects/justest/src/components/Footer/Footer.jsx",[],[],{"ruleId":"146","severity":1,"message":"147","line":5,"column":9,"nodeType":"148","messageId":"149","endLine":5,"endColumn":13},{"ruleId":"146","severity":1,"message":"150","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"150","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":25},{"ruleId":"146","severity":1,"message":"151","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":13},{"ruleId":"146","severity":1,"message":"152","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":17},{"ruleId":"146","severity":1,"message":"153","line":12,"column":11,"nodeType":"148","messageId":"149","endLine":12,"endColumn":19},{"ruleId":"146","severity":1,"message":"154","line":13,"column":11,"nodeType":"148","messageId":"149","endLine":13,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":23,"column":20,"nodeType":"157","messageId":"158","endLine":23,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":59,"column":17,"nodeType":"161","endLine":59,"endColumn":50},{"ruleId":"146","severity":1,"message":"162","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":48,"column":17,"nodeType":"161","endLine":48,"endColumn":50},{"ruleId":"146","severity":1,"message":"163","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"164","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":14},{"ruleId":"146","severity":1,"message":"165","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":23},{"ruleId":"146","severity":1,"message":"166","line":7,"column":20,"nodeType":"148","messageId":"149","endLine":7,"endColumn":27},{"ruleId":"146","severity":1,"message":"167","line":24,"column":11,"nodeType":"148","messageId":"149","endLine":24,"endColumn":25},{"ruleId":"155","severity":1,"message":"168","line":95,"column":36,"nodeType":"157","messageId":"158","endLine":95,"endColumn":38},{"ruleId":"155","severity":1,"message":"168","line":108,"column":42,"nodeType":"157","messageId":"158","endLine":108,"endColumn":44},{"ruleId":"155","severity":1,"message":"156","line":147,"column":13,"nodeType":"157","messageId":"158","endLine":147,"endColumn":15},{"ruleId":"155","severity":1,"message":"168","line":154,"column":13,"nodeType":"157","messageId":"158","endLine":154,"endColumn":15},{"ruleId":"155","severity":1,"message":"168","line":216,"column":24,"nodeType":"157","messageId":"158","endLine":216,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":220,"column":27,"nodeType":"157","messageId":"158","endLine":220,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":237,"column":7,"nodeType":"171","endLine":237,"endColumn":20,"suggestions":"172"},{"ruleId":"146","severity":1,"message":"163","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"162","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"173","line":56,"column":5,"nodeType":"148","messageId":"149","endLine":56,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":72,"column":15,"nodeType":"157","messageId":"158","endLine":72,"endColumn":17},{"ruleId":"155","severity":1,"message":"168","line":73,"column":20,"nodeType":"157","messageId":"158","endLine":73,"endColumn":22},{"ruleId":"146","severity":1,"message":"163","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"162","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"173","line":51,"column":5,"nodeType":"148","messageId":"149","endLine":51,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":67,"column":15,"nodeType":"157","messageId":"158","endLine":67,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":108,"column":19,"nodeType":"157","messageId":"158","endLine":108,"endColumn":21},{"ruleId":"155","severity":1,"message":"168","line":126,"column":20,"nodeType":"157","messageId":"158","endLine":126,"endColumn":22},{"ruleId":"155","severity":1,"message":"168","line":137,"column":9,"nodeType":"157","messageId":"158","endLine":137,"endColumn":11},{"ruleId":"155","severity":1,"message":"168","line":140,"column":15,"nodeType":"157","messageId":"158","endLine":140,"endColumn":17},{"ruleId":"155","severity":1,"message":"168","line":8,"column":20,"nodeType":"157","messageId":"158","endLine":8,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":18,"column":7,"nodeType":"161","endLine":18,"endColumn":63},{"ruleId":"159","severity":1,"message":"160","line":17,"column":9,"nodeType":"161","endLine":17,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":32,"column":13,"nodeType":"161","endLine":32,"endColumn":66},{"ruleId":"159","severity":1,"message":"160","line":38,"column":13,"nodeType":"161","endLine":38,"endColumn":66},{"ruleId":"146","severity":1,"message":"174","line":4,"column":22,"nodeType":"148","messageId":"149","endLine":4,"endColumn":36},{"ruleId":"146","severity":1,"message":"175","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":21},{"ruleId":"146","severity":1,"message":"176","line":6,"column":9,"nodeType":"148","messageId":"149","endLine":6,"endColumn":19},{"ruleId":"146","severity":1,"message":"177","line":56,"column":10,"nodeType":"148","messageId":"149","endLine":56,"endColumn":21},{"ruleId":"146","severity":1,"message":"178","line":56,"column":23,"nodeType":"148","messageId":"149","endLine":56,"endColumn":37},{"ruleId":"169","severity":1,"message":"179","line":144,"column":14,"nodeType":"171","endLine":144,"endColumn":47,"suggestions":"180"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":9,"nodeType":"148","messageId":"149","endLine":2,"endColumn":13},{"ruleId":"146","severity":1,"message":"174","line":4,"column":22,"nodeType":"148","messageId":"149","endLine":4,"endColumn":36},{"ruleId":"146","severity":1,"message":"175","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":21},{"ruleId":"146","severity":1,"message":"176","line":6,"column":9,"nodeType":"148","messageId":"149","endLine":6,"endColumn":19},{"ruleId":"146","severity":1,"message":"177","line":56,"column":10,"nodeType":"148","messageId":"149","endLine":56,"endColumn":21},{"ruleId":"146","severity":1,"message":"178","line":56,"column":23,"nodeType":"148","messageId":"149","endLine":56,"endColumn":37},{"ruleId":"169","severity":1,"message":"179","line":140,"column":14,"nodeType":"171","endLine":140,"endColumn":47,"suggestions":"181"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'validator' is defined but never used.","'nameData' is assigned a value but never used.","'surnameData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","'ReactDOM' is defined but never used.","'Header' is defined but never used.","'BrowserRouter' is defined but never used.","'useMemo' is defined but never used.","'currentUrl_num' is assigned a value but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateArray'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'TestIDConst' is assigned a value but never used.","'tooltipClasses' is defined but never used.","'ArchivePage' is defined but never used.","'createRoot' is defined but never used.","'itemsSliced' is assigned a value but never used.","'setItemsSliced' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'getClassNamesFor' and 'props.rowCount'. Either include them or remove the dependency array.",["183"],["184"],{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},"Update the dependencies array to be: [currentType, updateArray]",{"range":"190","text":"191"},"Update the dependencies array to be: [getClassNamesFor, items, currentPage, props.rowCount, requestSort]",{"range":"192","text":"193"},{"range":"194","text":"193"},[7973,7986],"[currentType, updateArray]",[4093,4126],"[getClassNamesFor, items, currentPage, props.rowCount, requestSort]",[3966,3999]]