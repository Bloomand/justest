{"ast":null,"code":"var _jsxFileName = \"/Users/alexgeldash/Projects/justest/src/components/pages/CreateTestPage/CreateTest.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ReactDOM } from 'react';\nimport { render } from 'react-dom';\nimport Header from '../../Header/Header.jsx';\nimport { BrowserRouter } from 'react-router-dom';\nimport Select from 'react-select';\nimport { useState, useMemo, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet listItems = [];\nlet listAnswers = [];\nconst optionsType = [{\n  value: '0',\n  label: 'Default test'\n}, {\n  value: '1',\n  label: 'Choice with points'\n}];\nconst updateList = (questions, currentType) => {\n  listItems = [];\n  let num = 0;\n  for (let i = 0; i < questions.length; i++) {\n    listAnswers = [];\n    num = 0;\n    for (let k = 0; k < questions[i].length; k++) {\n      if (num != 0) {\n        if (currentType == optionsType[0]) {\n          listAnswers.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"react-tips\",\n                value: questions[i][k][1],\n                checked: false,\n                className: \"form-check-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"answer\",\n                type: \"text\",\n                defaultValue: questions[i][k][0],\n                onChange: event => inputChange(questions, i, k, 0, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 38\n          }, this));\n        } else if (currentType == optionsType[1]) {\n          listAnswers.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"react-tips\",\n                value: questions[i][k][1],\n                checked: false,\n                className: \"form-check-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"answer\",\n                type: \"text\",\n                defaultValue: questions[i][k][0],\n                onChange: event => inputChange(questions, i, k, 0, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"answer_score\",\n                class: \"input_2\",\n                type: \"text\",\n                defaultValue: questions[i][k][1],\n                onChange: event => inputChange(questions, i, k, 1, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                for: \"answer_score\",\n                children: \"*\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0431\\u0430\\u043B\\u043B\\u043E\\u0432 \\u0437\\u0430 \\u0432\\u044B\\u0431\\u043E\\u0440 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 38\n          }, this));\n        }\n      } else {\n        num++;\n      }\n    }\n    listItems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AnswerSelect\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AnswerSelectHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"p1\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"question\",\n              type: \"text\",\n              defaultValue: questions[i][0],\n              onChange: event => inputChange(questions, i, -1, 0, event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              for: \"question\",\n              children: \"*\\u041E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441, \\u0435\\u0441\\u043B\\u0438 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteQuestion(questions, i, currentType),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: listAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }, this));\n  }\n  return {\n    listItems\n  };\n};\nconst inputChange = (questions, i, k, f, event) => {\n  if (k != -1) {\n    questions[i][k][f] = event;\n  } else {\n    questions[i][0] = event;\n  }\n};\nconst addQuestion = (questions, currentType) => {\n  questions.push([`Вопрос ${questions.length + 1}`, [\"Ответ 1\", 0], [\"Ответ 2\", 0], [\"Ответ 3\", 0]]);\n  updateList(questions, currentType);\n  render( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 12\n  }, this), document.getElementById(\"list\"));\n};\nconst deleteQuestion = (questions, num_L, currentType) => {\n  questions.splice(num_L, 1);\n  updateList(questions, currentType);\n  render( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 12\n  }, this), document.getElementById(\"list\"));\n};\nconst saveTest = (questions, currentType) => {\n  updateList(questions, currentType);\n  render( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 12\n  }, this), document.getElementById(\"list\"));\n};\nexport const CreateTest = () => {\n  _s();\n  const currentUrl = window.location.href;\n  const currentUrl_num = currentUrl.split('?')[1];\n  const TestData = {\n    \"id\": 1,\n    \"testName\": \"Are you seek?\",\n    \"description\": \"Yes\",\n    \"type\": 1,\n    \"questions\": [{\n      \"id\": 1,\n      \"question\": \"Why are you worked there\",\n      \"subanswers\": [{\n        \"id\": 1,\n        \"answer\": \"This is me\",\n        \"score\": 99\n      }, {\n        \"id\": 2,\n        \"answer\": \"This is\",\n        \"score\": 23\n      }]\n    }, {\n      \"id\": 4,\n      \"question\": \"Is not a quest\",\n      \"subanswers\": [{\n        \"id\": 5,\n        \"answer\": \"This is 1\",\n        \"score\": 2\n      }, {\n        \"id\": 6,\n        \"answer\": \"This is 2\",\n        \"score\": 4\n      }, {\n        \"id\": 7,\n        \"answer\": \"This is 3\",\n        \"score\": 5\n      }]\n    }]\n  };\n  let [currentType, setType] = useState(optionsType[TestData.type]);\n  let questions = TestData.questions.map(item => {\n    let res = [item.question];\n    item.subanswers.forEach(subItem => res.push([subItem.answer, subItem.score]));\n    return res;\n  });\n  updateList(questions, currentType);\n  const handleChangeType = (event, questions) => {\n    setType(optionsType[event.value]);\n    updateList(questions, currentType);\n  };\n  const updateArray = (questions, currentType) => {\n    console.log(\"looool\", currentType);\n    if (currentType == optionsType[0]) {\n      console.log(\"ladna\");\n      for (let i = 0; i < questions.length; i++) {\n        for (let k = 0; k < questions[i].length; k++) {\n          console.log(\"ladna1\");\n          questions[i][k][1] = 0;\n          console.log(\"ladna2\");\n        }\n      }\n    }\n    console.log(\"end-array\");\n  };\n  useEffect(() => {\n    console.log(`Вы нажали ${currentType.value} раз`);\n    updateArray(questions, currentType);\n    console.log(\"end-huk\");\n  }, [currentType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Create\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u043E\\u0441\\u0442\\u0430\\u0432\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MainCreate\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: './img/createtest.jpg',\n            alt: \"\",\n            className: \"CreateImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CreateQuestions\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"QuestHeader\",\n                value: TestData.testName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"QuestMessage\",\n                value: TestData.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"firststart\",\n              onClick: () => addQuestion(questions, currentType),\n              children: \"Add Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: \"basic-single\",\n              classNamePrefix: \"select\",\n              defaultValue: currentType,\n              name: \"typeTest\",\n              options: optionsType,\n              onChange: event => {\n                handleChangeType(event, questions);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"list\",\n              children: listItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"firststart\",\n              onClick: () => saveTest(questions, currentType),\n              children: \"Save Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 7\n  }, this);\n};\n_s(CreateTest, \"OcvQGfJGIdJCzG21F/YWsbX6pW8=\");\n_c = CreateTest;\nvar _c;\n$RefreshReg$(_c, \"CreateTest\");","map":{"version":3,"names":["React","ReactDOM","render","Header","BrowserRouter","Select","useState","useMemo","useEffect","jsxDEV","_jsxDEV","listItems","listAnswers","optionsType","value","label","updateList","questions","currentType","num","i","length","k","push","className","children","type","name","checked","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","event","inputChange","target","class","for","onClick","deleteQuestion","f","addQuestion","document","getElementById","num_L","splice","saveTest","CreateTest","_s","currentUrl","window","location","href","currentUrl_num","split","TestData","setType","map","item","res","question","subanswers","forEach","subItem","answer","score","handleChangeType","updateArray","console","log","src","alt","testName","description","classNamePrefix","options","id","_c","$RefreshReg$"],"sources":["/Users/alexgeldash/Projects/justest/src/components/pages/CreateTestPage/CreateTest.jsx"],"sourcesContent":["import React from 'react'\r\nimport { ReactDOM } from 'react';\r\nimport { render } from 'react-dom';\r\nimport Header from '../../Header/Header.jsx'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport { useState, useMemo, useEffect } from 'react';\r\n\r\n\r\n\r\nlet listItems = [];\r\nlet listAnswers = [];\r\n\r\nconst optionsType = [\r\n    { value: '0', label: 'Default test' },\r\n    { value: '1', label: 'Choice with points' }\r\n]\r\n\r\n\r\n\r\n\r\nconst updateList = (questions,currentType) =>{\r\n    listItems=[];\r\n    let num = 0;\r\n    for (let i=0;i<questions.length;i++) {\r\n        listAnswers = [];\r\n        num = 0;\r\n        for (let k =0;k<questions[i].length;k++) {\r\n            if(num!=0){\r\n                if(currentType == optionsType[0]){\r\n                    listAnswers.push(<div className=\"form-check\">\r\n                    <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"react-tips\"\r\n                        value={questions[i][k][1]}\r\n                        checked={false}\r\n                        className=\"form-check-input\"\r\n                    />\r\n                    <input name=\"answer\" type=\"text\" defaultValue={questions[i][k][0]} onChange={event => inputChange(questions,i,k,0,event.target.value)}></input>\r\n                    </label>\r\n                    </div>);\r\n                }else if(currentType == optionsType[1]){\r\n                    listAnswers.push(<div className=\"form-check\">\r\n                    <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"react-tips\"\r\n                        value={questions[i][k][1]}\r\n                        checked={false}\r\n                        className=\"form-check-input\"\r\n                    />\r\n                    <input name=\"answer\" type=\"text\" defaultValue={questions[i][k][0]} onChange={event => inputChange(questions,i,k,0,event.target.value)}></input>\r\n                    <input name=\"answer_score\" class=\"input_2\" type=\"text\" defaultValue={questions[i][k][1]} onChange={event => inputChange(questions,i,k,1,event.target.value)}></input>\r\n                    <span for=\"answer_score\">*Количество баллов за выбор ответа</span>\r\n                    </label>\r\n                    </div>);\r\n                }\r\n                \r\n            \r\n            }else{\r\n                num++;\r\n            }\r\n        }\r\n\r\n        listItems.push(<div>\r\n            <div className=\"AnswerSelect\">\r\n                <div className='AnswerSelectHeader'>\r\n                    <p1><input name=\"question\" type=\"text\" defaultValue={questions[i][0]} onChange={event => inputChange(questions,i,-1,0,event.target.value)}></input>\r\n                    <span for=\"question\">*Отредактируйте вопрос, если необходимо</span></p1>\r\n                    <button onClick={() => deleteQuestion(questions,i,currentType)}>Delete</button>\r\n                </div>\r\n                <form>\r\n                    <div className=\"form-check\">\r\n                        {listAnswers}\r\n                    </div>\r\n                </form>                             \r\n            </div>\r\n        </div>);\r\n    }\r\n    return{listItems}\r\n    \r\n}\r\n\r\nconst inputChange = (questions, i, k, f, event) =>{\r\n    if(k!=-1){\r\n        questions[i][k][f]=event;\r\n    }else{\r\n        questions[i][0]=event;\r\n    }\r\n}\r\n\r\nconst addQuestion = (questions,currentType) => {\r\n    questions.push([`Вопрос ${questions.length+1}`,[\"Ответ 1\",0],[\"Ответ 2\", 0],[\"Ответ 3\", 0]]);\r\n    updateList(questions,currentType);\r\n    render(<div>{listItems}</div>, document.getElementById(\"list\"));\r\n};\r\n\r\nconst deleteQuestion = (questions,num_L,currentType) => {\r\n    questions.splice(num_L, 1);\r\n    updateList(questions,currentType);\r\n    render(<div>{listItems}</div>, document.getElementById(\"list\"));\r\n};\r\n\r\nconst saveTest = (questions,currentType) => {\r\n    updateList(questions,currentType);\r\n    render(<div>{listItems}</div>, document.getElementById(\"list\"));\r\n}\r\n\r\nexport const CreateTest = () => {\r\n    const currentUrl = window.location.href;\r\n    const currentUrl_num=currentUrl.split('?')[1];\r\n\r\n    const TestData = {\r\n        \"id\": 1,\r\n        \"testName\": \"Are you seek?\",\r\n        \"description\": \"Yes\",\r\n        \"type\": 1,\r\n        \"questions\": [\r\n        {\r\n            \"id\": 1,\r\n            \"question\": \"Why are you worked there\",\r\n            \"subanswers\": [\r\n                {\r\n                    \"id\": 1,\r\n                    \"answer\": \"This is me\",\r\n                    \"score\": 99\r\n                },\r\n                {\r\n                    \"id\": 2,\r\n                    \"answer\": \"This is\",\r\n                    \"score\": 23\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"question\": \"Is not a quest\",\r\n            \"subanswers\": [\r\n                {\r\n                    \"id\": 5,\r\n                    \"answer\": \"This is 1\",\r\n                    \"score\": 2\r\n                },\r\n                {\r\n                    \"id\": 6,\r\n                    \"answer\": \"This is 2\",\r\n                    \"score\": 4\r\n                },\r\n                {\r\n                    \"id\": 7,\r\n                    \"answer\": \"This is 3\",\r\n                    \"score\": 5\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\n    let [currentType,setType] = useState(optionsType[TestData.type]);\r\n\r\n    let questions = TestData.questions.map(item => {\r\n        let res = [item.question];\r\n        item.subanswers.forEach(subItem => res.push([subItem.answer, subItem.score]));\r\n        return (res);\r\n    });\r\n\r\n    updateList(questions,currentType);\r\n\r\n    const handleChangeType = (event,questions) => {\r\n        setType(optionsType[event.value]);\r\n        updateList(questions,currentType);\r\n    }\r\n\r\n    const updateArray = (questions,currentType) =>{\r\n        console.log(\"looool\",currentType);\r\n        if(currentType == optionsType[0]){\r\n            console.log(\"ladna\");\r\n            for (let i=0;i<questions.length;i++) {\r\n                for (let k = 0;k<questions[i].length;k++) {\r\n                    console.log(\"ladna1\");\r\n                    questions[i][k][1] = 0;\r\n                    console.log(\"ladna2\");\r\n                }\r\n            }\r\n        }\r\n        console.log(\"end-array\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(`Вы нажали ${currentType.value} раз`);\r\n        updateArray(questions,currentType);\r\n        console.log(\"end-huk\");\r\n    },[currentType]);\r\n\r\n    return (\r\n      <div className='Content'>\r\n        <div className=\"Create\">\r\n            <div className=\"CreateHeader\">\r\n                <h1>Составь вопросы</h1>\r\n                <div className=\"MainCreate\">\r\n                    <img src={'./img/createtest.jpg'} alt=\"\" className='CreateImg'/>\r\n                    <div className=\"CreateQuestions\">\r\n                        <form>\r\n                            <p>Название</p>\r\n                            <input type=\"text\" className=\"QuestHeader\" value={TestData.testName} />\r\n                            <p>Описание</p>\r\n                            <input type=\"text\" className=\"QuestMessage\" value={TestData.description} />\r\n                        </form>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"firststart\" onClick={() => addQuestion(questions,currentType)}>Add Question</button>\r\n                        <Select\r\n                        className=\"basic-single\"\r\n                        classNamePrefix=\"select\"\r\n                        defaultValue={currentType}\r\n                        name=\"typeTest\"\r\n                        options={optionsType} \r\n                        onChange={event => {handleChangeType(event,questions)}}/>\r\n                        <div id=\"list\">{listItems}</div>\r\n                        <button className=\"firststart\" onClick={() => saveTest(questions,currentType)}>Save Test</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n    \r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}