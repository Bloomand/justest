{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEAN;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\r\n * The most commonly used EAN standard is\r\n * the thirteen-digit EAN-13, while the\r\n * less commonly used 8-digit EAN-8 barcode was\r\n * introduced for use on small packages.\r\n * Also EAN/UCC-14 is used for Grouping of individual\r\n * trade items above unit level(Intermediate, Carton or Pallet).\r\n * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\r\n * EAN consists of:\r\n * GS1 prefix, manufacturer code, product code and check digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\r\n * Reference: https://www.gtin.info/\r\n */\n\n/**\r\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\r\n * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\r\n * with exact numberic matching of 8 or 13 or 14 digits [0-9]\r\n */\nvar LENGTH_EAN_8 = 8;\nvar LENGTH_EAN_14 = 14;\nvar validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\n/**\r\n * Get position weight given:\r\n * EAN length and digit index/position\r\n *\r\n * @param {number} length\r\n * @param {number} index\r\n * @return {number}\r\n */\n\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\n    return index % 2 === 0 ? 3 : 1;\n  }\n  return index % 2 === 0 ? 1 : 3;\n}\n/**\r\n * Calculate EAN Check Digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\r\n *\r\n * @param {string} ean\r\n * @return {number}\r\n */\n\nfunction calculateCheckDigit(ean) {\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\n  }).reduce(function (acc, partialSum) {\n    return acc + partialSum;\n  }, 0);\n  var remainder = 10 - checksum % 10;\n  return remainder < 10 ? remainder : 0;\n}\n/**\r\n * Check if string is valid EAN:\r\n * Matches EAN-8/EAN-13/EAN-14 regex\r\n * Has valid check digit.\r\n *\r\n * @param {string} str\r\n * @return {boolean}\r\n */\n\nfunction isEAN(str) {\n  (0, _assertString.default)(str);\n  var actualCheckDigit = Number(str.slice(-1));\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isEAN","_assertString","_interopRequireDefault","require","obj","__esModule","LENGTH_EAN_8","LENGTH_EAN_14","validEanRegex","getPositionWeightThroughLengthAndIndex","length","index","calculateCheckDigit","ean","checksum","slice","split","map","char","Number","reduce","acc","partialSum","remainder","str","actualCheckDigit","test","module"],"sources":["D:/GitHub/TP2/just-test-front/justest/node_modules/validator/lib/isEAN.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isEAN;\r\n\r\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * The most commonly used EAN standard is\r\n * the thirteen-digit EAN-13, while the\r\n * less commonly used 8-digit EAN-8 barcode was\r\n * introduced for use on small packages.\r\n * Also EAN/UCC-14 is used for Grouping of individual\r\n * trade items above unit level(Intermediate, Carton or Pallet).\r\n * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\r\n * EAN consists of:\r\n * GS1 prefix, manufacturer code, product code and check digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\r\n * Reference: https://www.gtin.info/\r\n */\r\n\r\n/**\r\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\r\n * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\r\n * with exact numberic matching of 8 or 13 or 14 digits [0-9]\r\n */\r\nvar LENGTH_EAN_8 = 8;\r\nvar LENGTH_EAN_14 = 14;\r\nvar validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\r\n/**\r\n * Get position weight given:\r\n * EAN length and digit index/position\r\n *\r\n * @param {number} length\r\n * @param {number} index\r\n * @return {number}\r\n */\r\n\r\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\r\n  if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\r\n    return index % 2 === 0 ? 3 : 1;\r\n  }\r\n\r\n  return index % 2 === 0 ? 1 : 3;\r\n}\r\n/**\r\n * Calculate EAN Check Digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\r\n *\r\n * @param {string} ean\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction calculateCheckDigit(ean) {\r\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\r\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\r\n  }).reduce(function (acc, partialSum) {\r\n    return acc + partialSum;\r\n  }, 0);\r\n  var remainder = 10 - checksum % 10;\r\n  return remainder < 10 ? remainder : 0;\r\n}\r\n/**\r\n * Check if string is valid EAN:\r\n * Matches EAN-8/EAN-13/EAN-14 regex\r\n * Has valid check digit.\r\n *\r\n * @param {string} str\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isEAN(str) {\r\n  (0, _assertString.default)(str);\r\n  var actualCheckDigit = Number(str.slice(-1));\r\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\r\n}\r\n\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,KAAK;AAEvB,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE1E,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEL,OAAO,EAAEK;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAIE,YAAY,GAAG,CAAC;AACpB,IAAIC,aAAa,GAAG,EAAE;AACtB,IAAIC,aAAa,GAAG,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,sCAAsCA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAC7D,IAAID,MAAM,KAAKJ,YAAY,IAAII,MAAM,KAAKH,aAAa,EAAE;IACvD,OAAOI,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;EAChC;EAEA,OAAOA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,mBAAmBA,CAACC,GAAG,EAAE;EAChC,IAAIC,QAAQ,GAAGD,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,UAAUC,IAAI,EAAEP,KAAK,EAAE;IACnE,OAAOQ,MAAM,CAACD,IAAI,CAAC,GAAGT,sCAAsC,CAACI,GAAG,CAACH,MAAM,EAAEC,KAAK,CAAC;EACjF,CAAC,CAAC,CAACS,MAAM,CAAC,UAAUC,GAAG,EAAEC,UAAU,EAAE;IACnC,OAAOD,GAAG,GAAGC,UAAU;EACzB,CAAC,EAAE,CAAC,CAAC;EACL,IAAIC,SAAS,GAAG,EAAE,GAAGT,QAAQ,GAAG,EAAE;EAClC,OAAOS,SAAS,GAAG,EAAE,GAAGA,SAAS,GAAG,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASvB,KAAKA,CAACwB,GAAG,EAAE;EAClB,CAAC,CAAC,EAAEvB,aAAa,CAACF,OAAO,EAAEyB,GAAG,CAAC;EAC/B,IAAIC,gBAAgB,GAAGN,MAAM,CAACK,GAAG,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,OAAOP,aAAa,CAACkB,IAAI,CAACF,GAAG,CAAC,IAAIC,gBAAgB,KAAKb,mBAAmB,CAACY,GAAG,CAAC;AACjF;AAEAG,MAAM,CAAC9B,OAAO,GAAGA,OAAO,CAACE,OAAO;AAChC4B,MAAM,CAAC9B,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}