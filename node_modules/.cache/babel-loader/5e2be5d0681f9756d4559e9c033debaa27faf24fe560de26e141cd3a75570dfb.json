{"ast":null,"code":"var _jsxFileName = \"/Users/alexgeldash/Projects/justest/src/components/pages/CreateTestPage/CreateTest.jsx\";\nimport React from 'react';\nimport { ReactDOM } from 'react';\nimport { render } from 'react-dom';\nimport Header from '../../Header/Header.jsx';\nimport { BrowserRouter } from 'react-router-dom';\nimport Select from 'react-select';\nimport { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [];\nlet listItems = [];\nlet listAnswers = [];\nconst optionsType = [{\n  value: '0',\n  label: 'Default test'\n}, {\n  value: '1',\n  label: 'Choice with points'\n}];\nlet currentType = optionsType[0];\nconst updateList = questions => {\n  listItems = [];\n  let num = 0;\n  for (let i = 0; i < questions.length; i++) {\n    listAnswers = [];\n    num = 0;\n    for (let k = 0; k < questions[i].length; k++) {\n      if (num != 0) {\n        if (currentType == optionsType[0]) {\n          console.log(0);\n          listAnswers.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"react-tips\",\n                value: questions[i][k][1],\n                checked: false,\n                className: \"form-check-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"answer\",\n                type: \"text\",\n                defaultValue: questions[i][k][0],\n                onChange: event => inputChange(questions, i, k, 0, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 38\n          }, this));\n        } else if (currentType == optionsType[1]) {\n          console.log(1);\n          listAnswers.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"react-tips\",\n                value: questions[i][k][1],\n                checked: false,\n                className: \"form-check-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"answer\",\n                type: \"text\",\n                defaultValue: questions[i][k][0],\n                onChange: event => inputChange(questions, i, k, 0, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"answer_score\",\n                class: \"input_2\",\n                type: \"text\",\n                defaultValue: questions[i][k][1],\n                onChange: event => inputChange(questions, i, k, 1, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                for: \"answer_score\",\n                children: \"*\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0431\\u0430\\u043B\\u043B\\u043E\\u0432 \\u0437\\u0430 \\u0432\\u044B\\u0431\\u043E\\u0440 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 38\n          }, this));\n        }\n      } else {\n        num++;\n      }\n    }\n    listItems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AnswerSelect\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AnswerSelectHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"p1\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"question\",\n              type: \"text\",\n              defaultValue: questions[i][0],\n              onChange: event => inputChange(questions, i, -1, 0, event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              for: \"question\",\n              children: \"*\\u041E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441, \\u0435\\u0441\\u043B\\u0438 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteQuestion(questions, i),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: listAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this));\n  }\n  return {\n    listItems\n  };\n};\nconst inputChange = (questions, i, k, f, event) => {\n  if (k != -1) {\n    questions[i][k][f] = event;\n  } else {\n    questions[i][0] = event;\n  }\n};\nconst addQuestion = questions => {\n  questions.push([`Вопрос ${questions.length + 1}`, [\"Ответ 1\", 0], [\"Ответ 2\", 0], [\"Ответ 3\", 0]]);\n  updateList(questions);\n  render( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"firststart\",\n      onClick: () => addQuestion(questions),\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 109\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"firststart\",\n      onClick: () => saveTest(questions),\n      children: \"Save Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 131\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 12\n  }, this), document.getElementById(\"ren\"));\n};\nconst deleteQuestion = (questions, num_L) => {\n  questions.splice(num_L, 1);\n  updateList(questions);\n  render( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"firststart\",\n      onClick: () => addQuestion(questions),\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 109\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"firststart\",\n      onClick: () => saveTest(questions),\n      children: \"Save Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 131\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 12\n  }, this), document.getElementById(\"ren\"));\n};\nconst saveTest = questions => {\n  updateList(questions);\n};\nexport const CreateTest = () => {\n  const currentUrl = window.location.href;\n  const currentUrl_num = currentUrl.split('?')[1];\n  const TestData = {\n    \"id\": 1,\n    \"testName\": \"Are you seek?\",\n    \"description\": \"Yes\",\n    \"type\": 1,\n    \"questions\": [{\n      \"id\": 1,\n      \"question\": \"Why are you worked there\",\n      \"subanswers\": [{\n        \"id\": 1,\n        \"answer\": \"This is me\",\n        \"score\": 99\n      }, {\n        \"id\": 2,\n        \"answer\": \"This is\",\n        \"score\": 23\n      }]\n    }, {\n      \"id\": 4,\n      \"question\": \"Is not a quest\",\n      \"subanswers\": [{\n        \"id\": 5,\n        \"answer\": \"This is 1\",\n        \"score\": 2\n      }, {\n        \"id\": 6,\n        \"answer\": \"This is 2\",\n        \"score\": 4\n      }, {\n        \"id\": 7,\n        \"answer\": \"This is 3\",\n        \"score\": 5\n      }]\n    }]\n  };\n  currentType = optionsType[TestData.type];\n  const questions = TestData.questions.map(item => {\n    const res = [item.question];\n    item.subanswers.forEach(subItem => res.push([subItem.answer, subItem.score]));\n    return res;\n  });\n  updateList(questions);\n  const handleChangeType = (event, questions) => {\n    currentType = optionsType[event.value];\n    console.log(currentType);\n    updateList(questions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Create\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u043E\\u0441\\u0442\\u0430\\u0432\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MainCreate\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: './img/createtest.jpg',\n            alt: \"\",\n            className: \"CreateImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CreateQuestions\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"QuestHeader\",\n                value: TestData.testName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"QuestMessage\",\n                value: TestData.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"ren\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"firststart\",\n              onClick: () => addQuestion(questions),\n              children: \"Add Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: \"basic-single\",\n              classNamePrefix: \"select\",\n              defaultValue: currentType,\n              name: \"typeTest\",\n              options: optionsType,\n              onChange: event => {\n                handleChangeType(event, questions);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: listItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"firststart\",\n              onClick: () => saveTest(questions),\n              children: \"Save Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 7\n  }, this);\n};\n_c = CreateTest;\nvar _c;\n$RefreshReg$(_c, \"CreateTest\");","map":{"version":3,"names":["React","ReactDOM","render","Header","BrowserRouter","Select","useState","useMemo","jsxDEV","_jsxDEV","questions","listItems","listAnswers","optionsType","value","label","currentType","updateList","num","i","length","k","console","log","push","className","children","type","name","checked","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","event","inputChange","target","class","for","onClick","deleteQuestion","f","addQuestion","saveTest","document","getElementById","num_L","splice","CreateTest","currentUrl","window","location","href","currentUrl_num","split","TestData","map","item","res","question","subanswers","forEach","subItem","answer","score","handleChangeType","src","alt","testName","description","id","classNamePrefix","options","_c","$RefreshReg$"],"sources":["/Users/alexgeldash/Projects/justest/src/components/pages/CreateTestPage/CreateTest.jsx"],"sourcesContent":["import React from 'react'\r\nimport { ReactDOM } from 'react';\r\nimport { render } from 'react-dom';\r\nimport Header from '../../Header/Header.jsx'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport { useState, useMemo } from 'react';\r\n\r\n\r\nconst questions = [];\r\n\r\nlet listItems = [];\r\nlet listAnswers = [];\r\n\r\nconst optionsType = [\r\n    { value: '0', label: 'Default test' },\r\n    { value: '1', label: 'Choice with points' }\r\n]\r\nlet currentType = optionsType[0];\r\n\r\nconst updateList = (questions) =>{\r\n    listItems=[];\r\n    let num = 0;\r\n    for (let i=0;i<questions.length;i++) {\r\n        listAnswers = [];\r\n        num = 0;\r\n        for (let k =0;k<questions[i].length;k++) {\r\n            if(num!=0){\r\n                if(currentType == optionsType[0]){\r\n                    console.log(0);\r\n                    listAnswers.push(<div className=\"form-check\">\r\n                    <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"react-tips\"\r\n                        value={questions[i][k][1]}\r\n                        checked={false}\r\n                        className=\"form-check-input\"\r\n                    />\r\n                    <input name=\"answer\" type=\"text\" defaultValue={questions[i][k][0]} onChange={event => inputChange(questions,i,k,0,event.target.value)}></input>\r\n                    </label>\r\n                    </div>);\r\n                }else if(currentType == optionsType[1]){\r\n                    console.log(1);\r\n                    listAnswers.push(<div className=\"form-check\">\r\n                    <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"react-tips\"\r\n                        value={questions[i][k][1]}\r\n                        checked={false}\r\n                        className=\"form-check-input\"\r\n                    />\r\n                    <input name=\"answer\" type=\"text\" defaultValue={questions[i][k][0]} onChange={event => inputChange(questions,i,k,0,event.target.value)}></input>\r\n                    <input name=\"answer_score\" class=\"input_2\" type=\"text\" defaultValue={questions[i][k][1]} onChange={event => inputChange(questions,i,k,1,event.target.value)}></input>\r\n                    <span for=\"answer_score\">*Количество баллов за выбор ответа</span>\r\n                    </label>\r\n                    </div>);\r\n                }\r\n                \r\n            \r\n            }else{\r\n                num++;\r\n            }\r\n        }\r\n\r\n        listItems.push(<div>\r\n            <div className=\"AnswerSelect\">\r\n                <div className='AnswerSelectHeader'>\r\n                    <p1><input name=\"question\" type=\"text\" defaultValue={questions[i][0]} onChange={event => inputChange(questions,i,-1,0,event.target.value)}></input>\r\n                    <span for=\"question\">*Отредактируйте вопрос, если необходимо</span></p1>\r\n                    <button onClick={() => deleteQuestion(questions,i)}>Delete</button>\r\n                </div>\r\n                <form>\r\n                    <div className=\"form-check\">\r\n                        {listAnswers}\r\n                    </div>\r\n                </form>                             \r\n            </div>\r\n        </div>);\r\n    }\r\n    return{listItems}\r\n    \r\n}\r\n\r\nconst inputChange = (questions, i, k, f, event) =>{\r\n    if(k!=-1){\r\n        questions[i][k][f]=event;\r\n    }else{\r\n        questions[i][0]=event;\r\n    }\r\n}\r\n\r\nconst addQuestion = (questions) => {\r\n    questions.push([`Вопрос ${questions.length+1}`,[\"Ответ 1\",0],[\"Ответ 2\", 0],[\"Ответ 3\", 0]]);\r\n    updateList(questions);\r\n    render(<div><button className=\"firststart\" onClick={() => addQuestion(questions)} >Add Question</button><div>{listItems}</div><button className=\"firststart\" onClick={() => saveTest(questions)}>Save Test</button></div>, document.getElementById(\"ren\"));\r\n};\r\n\r\nconst deleteQuestion = (questions,num_L) => {\r\n    questions.splice(num_L, 1);\r\n    updateList(questions);\r\n    render(<div><button className=\"firststart\" onClick={() => addQuestion(questions)} >Add Question</button><div>{listItems}</div><button className=\"firststart\" onClick={() => saveTest(questions)}>Save Test</button></div>, document.getElementById(\"ren\"));\r\n};\r\n\r\n\r\nconst saveTest = (questions) => {\r\n    updateList(questions);\r\n}\r\n\r\nexport const CreateTest = () => {\r\n    const currentUrl = window.location.href;\r\n    const currentUrl_num=currentUrl.split('?')[1];\r\n\r\n    const TestData = {\r\n        \"id\": 1,\r\n        \"testName\": \"Are you seek?\",\r\n        \"description\": \"Yes\",\r\n        \"type\": 1,\r\n        \"questions\": [\r\n        {\r\n            \"id\": 1,\r\n            \"question\": \"Why are you worked there\",\r\n            \"subanswers\": [\r\n                {\r\n                    \"id\": 1,\r\n                    \"answer\": \"This is me\",\r\n                    \"score\": 99\r\n                },\r\n                {\r\n                    \"id\": 2,\r\n                    \"answer\": \"This is\",\r\n                    \"score\": 23\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"question\": \"Is not a quest\",\r\n            \"subanswers\": [\r\n                {\r\n                    \"id\": 5,\r\n                    \"answer\": \"This is 1\",\r\n                    \"score\": 2\r\n                },\r\n                {\r\n                    \"id\": 6,\r\n                    \"answer\": \"This is 2\",\r\n                    \"score\": 4\r\n                },\r\n                {\r\n                    \"id\": 7,\r\n                    \"answer\": \"This is 3\",\r\n                    \"score\": 5\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n    currentType = optionsType[TestData.type];\r\n    const questions = TestData.questions.map(item => {\r\n        const res = [item.question];\r\n        item.subanswers.forEach(subItem => res.push([subItem.answer, subItem.score]));\r\n        return (res);\r\n    });\r\n    updateList(questions);\r\n\r\n    const handleChangeType = (event,questions) => {\r\n        currentType = optionsType[event.value];\r\n        console.log(currentType);\r\n        updateList(questions);\r\n\r\n    }\r\n    return (\r\n      <div className='Content'>\r\n        <div className=\"Create\">\r\n            <div className=\"CreateHeader\">\r\n                <h1>Составь вопросы</h1>\r\n                <div className=\"MainCreate\">\r\n                    <img src={'./img/createtest.jpg'} alt=\"\" className='CreateImg'/>\r\n                    <div className=\"CreateQuestions\">\r\n                        <form>\r\n                            <p>Название</p>\r\n                            <input type=\"text\" className=\"QuestHeader\" value={TestData.testName} />\r\n                            <p>Описание</p>\r\n                            <input type=\"text\" className=\"QuestMessage\" value={TestData.description} />\r\n                        </form>\r\n                    </div>\r\n                    <div id=\"ren\">\r\n                        <button className=\"firststart\" onClick={() => addQuestion(questions)}>Add Question</button>\r\n                        <Select\r\n                        className=\"basic-single\"\r\n                        classNamePrefix=\"select\"\r\n                        defaultValue={currentType}\r\n                        name=\"typeTest\"\r\n                        options={optionsType} \r\n                        onChange={event => {handleChangeType(event,questions)}}/>\r\n                        <div>{listItems}</div>\r\n                        <button className=\"firststart\" onClick={() => saveTest(questions)}>Save Test</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n    \r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}