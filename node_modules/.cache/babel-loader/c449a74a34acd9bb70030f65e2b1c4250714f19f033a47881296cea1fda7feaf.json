{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multilineRegexp;\n\n/**\r\n * Build RegExp object from an array\r\n * of multiple/multi-line regexp parts\r\n *\r\n * @param {string[]} parts\r\n * @param {string} flags\r\n * @return {object} - RegExp object\r\n */\nfunction multilineRegexp(parts, flags) {\n  var regexpAsStringLiteral = parts.join('');\n  return new RegExp(regexpAsStringLiteral, flags);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","multilineRegexp","parts","flags","regexpAsStringLiteral","join","RegExp","module"],"sources":["D:/GitHub/TP2/just-test-front/justest/node_modules/validator/lib/util/multilineRegex.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = multilineRegexp;\r\n\r\n/**\r\n * Build RegExp object from an array\r\n * of multiple/multi-line regexp parts\r\n *\r\n * @param {string[]} parts\r\n * @param {string} flags\r\n * @return {object} - RegExp object\r\n */\r\nfunction multilineRegexp(parts, flags) {\r\n  var regexpAsStringLiteral = parts.join('');\r\n  return new RegExp(regexpAsStringLiteral, flags);\r\n}\r\n\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,eAAe;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACrC,IAAIC,qBAAqB,GAAGF,KAAK,CAACG,IAAI,CAAC,EAAE,CAAC;EAC1C,OAAO,IAAIC,MAAM,CAACF,qBAAqB,EAAED,KAAK,CAAC;AACjD;AAEAI,MAAM,CAACT,OAAO,GAAGA,OAAO,CAACE,OAAO;AAChCO,MAAM,CAACT,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}