{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIPRange;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar subnetMaybe = /^\\d{1,3}$/;\nvar v4Subnet = 32;\nvar v6Subnet = 128;\nfunction isIPRange(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\n\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (!subnetMaybe.test(parts[1])) {\n    return false;\n  } // Disallow preceding 0 i.e. 01, 02, ...\n\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\n    return false;\n  }\n  var isValidIP = (0, _isIP.default)(parts[0], version);\n  if (!isValidIP) {\n    return false;\n  } // Define valid subnet according to IP's version\n\n  var expectedSubnet = null;\n  switch (String(version)) {\n    case '4':\n      expectedSubnet = v4Subnet;\n      break;\n    case '6':\n      expectedSubnet = v6Subnet;\n      break;\n    default:\n      expectedSubnet = (0, _isIP.default)(parts[0], '6') ? v6Subnet : v4Subnet;\n  }\n  return parts[1] <= expectedSubnet && parts[1] >= 0;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isIPRange","_assertString","_interopRequireDefault","require","_isIP","obj","__esModule","subnetMaybe","v4Subnet","v6Subnet","str","version","arguments","length","undefined","parts","split","test","startsWith","isValidIP","expectedSubnet","String","module"],"sources":["D:/GitHub/TP2/just-test-front/justest/node_modules/validator/lib/isIPRange.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isIPRange;\r\n\r\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\r\n\r\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar subnetMaybe = /^\\d{1,3}$/;\r\nvar v4Subnet = 32;\r\nvar v6Subnet = 128;\r\n\r\nfunction isIPRange(str) {\r\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\r\n  (0, _assertString.default)(str);\r\n  var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\r\n\r\n  if (parts.length !== 2) {\r\n    return false;\r\n  }\r\n\r\n  if (!subnetMaybe.test(parts[1])) {\r\n    return false;\r\n  } // Disallow preceding 0 i.e. 01, 02, ...\r\n\r\n\r\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\r\n    return false;\r\n  }\r\n\r\n  var isValidIP = (0, _isIP.default)(parts[0], version);\r\n\r\n  if (!isValidIP) {\r\n    return false;\r\n  } // Define valid subnet according to IP's version\r\n\r\n\r\n  var expectedSubnet = null;\r\n\r\n  switch (String(version)) {\r\n    case '4':\r\n      expectedSubnet = v4Subnet;\r\n      break;\r\n\r\n    case '6':\r\n      expectedSubnet = v6Subnet;\r\n      break;\r\n\r\n    default:\r\n      expectedSubnet = (0, _isIP.default)(parts[0], '6') ? v6Subnet : v4Subnet;\r\n  }\r\n\r\n  return parts[1] <= expectedSubnet && parts[1] >= 0;\r\n}\r\n\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,SAAS;AAE3B,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE1E,IAAIC,KAAK,GAAGF,sBAAsB,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAErD,SAASD,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEN,OAAO,EAAEM;EAAI,CAAC;AAAE;AAE9F,IAAIE,WAAW,GAAG,WAAW;AAC7B,IAAIC,QAAQ,GAAG,EAAE;AACjB,IAAIC,QAAQ,GAAG,GAAG;AAElB,SAAST,SAASA,CAACU,GAAG,EAAE;EACtB,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACpF,CAAC,CAAC,EAAEX,aAAa,CAACF,OAAO,EAAEW,GAAG,CAAC;EAC/B,IAAIK,KAAK,GAAGL,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE5B,IAAID,KAAK,CAACF,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO,KAAK;EACd;EAEA,IAAI,CAACN,WAAW,CAACU,IAAI,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IAC/B,OAAO,KAAK;EACd,CAAC,CAAC;;EAGF,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACF,MAAM,GAAG,CAAC,IAAIE,KAAK,CAAC,CAAC,CAAC,CAACG,UAAU,CAAC,GAAG,CAAC,EAAE;IACnD,OAAO,KAAK;EACd;EAEA,IAAIC,SAAS,GAAG,CAAC,CAAC,EAAEf,KAAK,CAACL,OAAO,EAAEgB,KAAK,CAAC,CAAC,CAAC,EAAEJ,OAAO,CAAC;EAErD,IAAI,CAACQ,SAAS,EAAE;IACd,OAAO,KAAK;EACd,CAAC,CAAC;;EAGF,IAAIC,cAAc,GAAG,IAAI;EAEzB,QAAQC,MAAM,CAACV,OAAO,CAAC;IACrB,KAAK,GAAG;MACNS,cAAc,GAAGZ,QAAQ;MACzB;IAEF,KAAK,GAAG;MACNY,cAAc,GAAGX,QAAQ;MACzB;IAEF;MACEW,cAAc,GAAG,CAAC,CAAC,EAAEhB,KAAK,CAACL,OAAO,EAAEgB,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGN,QAAQ,GAAGD,QAAQ;EAAC;EAG7E,OAAOO,KAAK,CAAC,CAAC,CAAC,IAAIK,cAAc,IAAIL,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AACpD;AAEAO,MAAM,CAACzB,OAAO,GAAGA,OAAO,CAACE,OAAO;AAChCuB,MAAM,CAACzB,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}