{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase64;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar notBase64 = /[^A-Z0-9+\\/=]/i;\nvar urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\nvar defaultBase64Options = {\n  urlSafe: false\n};\nfunction isBase64(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase64Options);\n  var len = str.length;\n  if (options.urlSafe) {\n    return urlSafeBase64.test(str);\n  }\n  if (len % 4 !== 0 || notBase64.test(str)) {\n    return false;\n  }\n  var firstPaddingChar = str.indexOf('=');\n  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isBase64","_assertString","_interopRequireDefault","require","_merge","obj","__esModule","notBase64","urlSafeBase64","defaultBase64Options","urlSafe","str","options","len","length","test","firstPaddingChar","indexOf","module"],"sources":["D:/GitHub/TP2/just-test-front/justest/node_modules/validator/lib/isBase64.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isBase64;\r\n\r\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\r\n\r\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar notBase64 = /[^A-Z0-9+\\/=]/i;\r\nvar urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\r\nvar defaultBase64Options = {\r\n  urlSafe: false\r\n};\r\n\r\nfunction isBase64(str, options) {\r\n  (0, _assertString.default)(str);\r\n  options = (0, _merge.default)(options, defaultBase64Options);\r\n  var len = str.length;\r\n\r\n  if (options.urlSafe) {\r\n    return urlSafeBase64.test(str);\r\n  }\r\n\r\n  if (len % 4 !== 0 || notBase64.test(str)) {\r\n    return false;\r\n  }\r\n\r\n  var firstPaddingChar = str.indexOf('=');\r\n  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\r\n}\r\n\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,QAAQ;AAE1B,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE1E,IAAIC,MAAM,GAAGF,sBAAsB,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;AAE5D,SAASD,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEN,OAAO,EAAEM;EAAI,CAAC;AAAE;AAE9F,IAAIE,SAAS,GAAG,gBAAgB;AAChC,IAAIC,aAAa,GAAG,iBAAiB;AACrC,IAAIC,oBAAoB,GAAG;EACzBC,OAAO,EAAE;AACX,CAAC;AAED,SAASV,QAAQA,CAACW,GAAG,EAAEC,OAAO,EAAE;EAC9B,CAAC,CAAC,EAAEX,aAAa,CAACF,OAAO,EAAEY,GAAG,CAAC;EAC/BC,OAAO,GAAG,CAAC,CAAC,EAAER,MAAM,CAACL,OAAO,EAAEa,OAAO,EAAEH,oBAAoB,CAAC;EAC5D,IAAII,GAAG,GAAGF,GAAG,CAACG,MAAM;EAEpB,IAAIF,OAAO,CAACF,OAAO,EAAE;IACnB,OAAOF,aAAa,CAACO,IAAI,CAACJ,GAAG,CAAC;EAChC;EAEA,IAAIE,GAAG,GAAG,CAAC,KAAK,CAAC,IAAIN,SAAS,CAACQ,IAAI,CAACJ,GAAG,CAAC,EAAE;IACxC,OAAO,KAAK;EACd;EAEA,IAAIK,gBAAgB,GAAGL,GAAG,CAACM,OAAO,CAAC,GAAG,CAAC;EACvC,OAAOD,gBAAgB,KAAK,CAAC,CAAC,IAAIA,gBAAgB,KAAKH,GAAG,GAAG,CAAC,IAAIG,gBAAgB,KAAKH,GAAG,GAAG,CAAC,IAAIF,GAAG,CAACE,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG;AACxH;AAEAK,MAAM,CAACrB,OAAO,GAAGA,OAAO,CAACE,OAAO;AAChCmB,MAAM,CAACrB,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}