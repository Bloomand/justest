{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMimeType;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/*\r\n  Checks if the provided string matches to a correct Media type format (MIME type)\r\n\r\n  This function only checks is the string format follows the\r\n  etablished rules by the according RFC specifications.\r\n  This function supports 'charset' in textual media types\r\n  (https://tools.ietf.org/html/rfc6657).\r\n\r\n  This function does not check against all the media types listed\r\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\r\n  because of lightness purposes : it would require to include\r\n  all these MIME types in this librairy, which would weigh it\r\n  significantly. This kind of effort maybe is not worth for the use that\r\n  this function has in this entire librairy.\r\n\r\n  More informations in the RFC specifications :\r\n  - https://tools.ietf.org/html/rfc2045\r\n  - https://tools.ietf.org/html/rfc2046\r\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\r\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\r\n*/\n// Match simple MIME types\n// NB :\n//   Subtype length must not exceed 100 characters.\n//   This rule does not comply to the RFC specs (what is the max length ?).\nvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+_]{1,100}$/i; // eslint-disable-line max-len\n// Handle \"charset\" in \"text/*\"\n\nvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n// Handle \"boundary\" in \"multipart/*\"\n\nvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\nfunction isMimeType(str) {\n  (0, _assertString.default)(str);\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isMimeType","_assertString","_interopRequireDefault","require","obj","__esModule","mimeTypeSimple","mimeTypeText","mimeTypeMultipart","str","test","module"],"sources":["D:/GitHub/TP2/just-test-front/justest/node_modules/validator/lib/isMimeType.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isMimeType;\r\n\r\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/*\r\n  Checks if the provided string matches to a correct Media type format (MIME type)\r\n\r\n  This function only checks is the string format follows the\r\n  etablished rules by the according RFC specifications.\r\n  This function supports 'charset' in textual media types\r\n  (https://tools.ietf.org/html/rfc6657).\r\n\r\n  This function does not check against all the media types listed\r\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\r\n  because of lightness purposes : it would require to include\r\n  all these MIME types in this librairy, which would weigh it\r\n  significantly. This kind of effort maybe is not worth for the use that\r\n  this function has in this entire librairy.\r\n\r\n  More informations in the RFC specifications :\r\n  - https://tools.ietf.org/html/rfc2045\r\n  - https://tools.ietf.org/html/rfc2046\r\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\r\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\r\n*/\r\n// Match simple MIME types\r\n// NB :\r\n//   Subtype length must not exceed 100 characters.\r\n//   This rule does not comply to the RFC specs (what is the max length ?).\r\nvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+_]{1,100}$/i; // eslint-disable-line max-len\r\n// Handle \"charset\" in \"text/*\"\r\n\r\nvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\r\n// Handle \"boundary\" in \"multipart/*\"\r\n\r\nvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\r\n\r\nfunction isMimeType(str) {\r\n  (0, _assertString.default)(str);\r\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\r\n}\r\n\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,UAAU;AAE5B,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE1E,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEL,OAAO,EAAEK;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,cAAc,GAAG,iGAAiG,CAAC,CAAC;AACxH;;AAEA,IAAIC,YAAY,GAAG,uIAAuI,CAAC,CAAC;AAC5J;;AAEA,IAAIC,iBAAiB,GAAG,8JAA8J,CAAC,CAAC;;AAExL,SAASR,UAAUA,CAACS,GAAG,EAAE;EACvB,CAAC,CAAC,EAAER,aAAa,CAACF,OAAO,EAAEU,GAAG,CAAC;EAC/B,OAAOH,cAAc,CAACI,IAAI,CAACD,GAAG,CAAC,IAAIF,YAAY,CAACG,IAAI,CAACD,GAAG,CAAC,IAAID,iBAAiB,CAACE,IAAI,CAACD,GAAG,CAAC;AAC1F;AAEAE,MAAM,CAACd,OAAO,GAAGA,OAAO,CAACE,OAAO;AAChCY,MAAM,CAACd,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}