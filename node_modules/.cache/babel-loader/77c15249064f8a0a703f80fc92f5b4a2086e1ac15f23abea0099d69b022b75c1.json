{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLuhnNumber;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isLuhnNumber(str) {\n  (0, _assertString.default)(str);\n  var sanitized = str.replace(/[- ]+/g, '');\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n  return !!(sum % 10 === 0 ? sanitized : false);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isLuhnNumber","_assertString","_interopRequireDefault","require","obj","__esModule","str","sanitized","replace","sum","digit","tmpNum","shouldDouble","i","length","substring","parseInt","module"],"sources":["D:/GitHub/TP2/just-test-front/justest/node_modules/validator/lib/isLuhnNumber.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isLuhnNumber;\r\n\r\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isLuhnNumber(str) {\r\n  (0, _assertString.default)(str);\r\n  var sanitized = str.replace(/[- ]+/g, '');\r\n  var sum = 0;\r\n  var digit;\r\n  var tmpNum;\r\n  var shouldDouble;\r\n\r\n  for (var i = sanitized.length - 1; i >= 0; i--) {\r\n    digit = sanitized.substring(i, i + 1);\r\n    tmpNum = parseInt(digit, 10);\r\n\r\n    if (shouldDouble) {\r\n      tmpNum *= 2;\r\n\r\n      if (tmpNum >= 10) {\r\n        sum += tmpNum % 10 + 1;\r\n      } else {\r\n        sum += tmpNum;\r\n      }\r\n    } else {\r\n      sum += tmpNum;\r\n    }\r\n\r\n    shouldDouble = !shouldDouble;\r\n  }\r\n\r\n  return !!(sum % 10 === 0 ? sanitized : false);\r\n}\r\n\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,YAAY;AAE9B,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE1E,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEL,OAAO,EAAEK;EAAI,CAAC;AAAE;AAE9F,SAASJ,YAAYA,CAACM,GAAG,EAAE;EACzB,CAAC,CAAC,EAAEL,aAAa,CAACF,OAAO,EAAEO,GAAG,CAAC;EAC/B,IAAIC,SAAS,GAAGD,GAAG,CAACE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;EACzC,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,KAAK;EACT,IAAIC,MAAM;EACV,IAAIC,YAAY;EAEhB,KAAK,IAAIC,CAAC,GAAGN,SAAS,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC9CH,KAAK,GAAGH,SAAS,CAACQ,SAAS,CAACF,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;IACrCF,MAAM,GAAGK,QAAQ,CAACN,KAAK,EAAE,EAAE,CAAC;IAE5B,IAAIE,YAAY,EAAE;MAChBD,MAAM,IAAI,CAAC;MAEX,IAAIA,MAAM,IAAI,EAAE,EAAE;QAChBF,GAAG,IAAIE,MAAM,GAAG,EAAE,GAAG,CAAC;MACxB,CAAC,MAAM;QACLF,GAAG,IAAIE,MAAM;MACf;IACF,CAAC,MAAM;MACLF,GAAG,IAAIE,MAAM;IACf;IAEAC,YAAY,GAAG,CAACA,YAAY;EAC9B;EAEA,OAAO,CAAC,EAAEH,GAAG,GAAG,EAAE,KAAK,CAAC,GAAGF,SAAS,GAAG,KAAK,CAAC;AAC/C;AAEAU,MAAM,CAACpB,OAAO,GAAGA,OAAO,CAACE,OAAO;AAChCkB,MAAM,CAACpB,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}